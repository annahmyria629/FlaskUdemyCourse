1. Надстройка над системой
    Без докера на локальную машину нужно было сетапить виртуальную со своей осью, что увеличивало
    нагрузку.

    С докером:
    Приложения в докере (каждое со своим кодом, энвом и тд)
    Докер
    ОС
    Машина

    Докер берет приложение, ретранслирует его в систему, которая подходит для оси, после чего
    машина производит ран.

    В рамках терминологии докера, приложения называются контейнерами. Контейнер состоит из образа.
    Это, по сути, текстовый файл, который описывает все необходимые приложению свойства энва.
    Когда энв описан, можно ранить образ в контейнере.

2. Docker vs Docker Compose
    Docker применяется для управления отдельными контейнерами (сервисами), из которых состоит приложение.

    Docker Compose используется для одновременного управления несколькими контейнерами,
    входящими в состав приложения. Этот инструмент предлагает те же возможности, что и Docker,
    но позволяет работать с более сложными приложениями.

    Если для обеспечения функционирования этого проекта используется несколько сервисов,
    то Docker Compose может вам пригодиться. Например, в ситуации, когда создают веб-сайт,
    которому, для выполнения аутентификации пользователей, нужно подключиться к базе данных.
    Подобный проект может состоять из двух сервисов — того, что обеспечивает работу сайта, и того,
    который отвечает за поддержку базы данных.

3. Dockerfile
    FROM python:3 - downloads python3 image (it contains python on Ubuntu)
    WORKDIR /usr/src/app - tells, that in this Ubuntu vm workdir must have such path
    COPY requirements.txt . - copy requirements.txt from local vm to Ubuntu into workdir
    RUN pip install --no-cache-dir -r requirements.txt - makes install dependencies from requirements.txt
    COPY . . - copy all files from local vm to docker vm workdir
    CMD ["python", "app.py"] - make cmd of docker vm to run script

4. docker-compose
    Controls all apps.
    version: '3' - version of docker-compose
    services - all apps
        web: - name of the service
            build: ./web - build it from ./web directory, this folder must contains Dockerfile
            ports:
                - '5000:5000' - ports matching for server
            links:
                - db - list of services, from which web app is dependent

    docker-compose build - build services
    docker-compose up - create and start container
